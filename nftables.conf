#!/usr/sbin/nft -f

flush ruleset

table netdev tbl_lo_inet_ing_filter {
	chain chn_lo_inet_ing_filter {
		type filter \
		hook ingress \
		device lo \
		priority filter; \
		policy accept;
	}
}

table netdev tbl_lan_netdev_ing_filter {
	chain chn_lan_netdev_ing_filter {
		type filter \
		hook ingress \
		device lan0 \
		priority filter; \
		policy drop;

###############			INVALID

	#drop ipv6
		ether type 0x86DD \
		log prefix "NET-LOG: DROP: LAN-ingress-ipv6 - " \
		log level warn \
		log flags all \
		drop;

	#allow other ipv4 packets
		ether type != 0x0800 \
		log prefix "NET-LOG: DROP: LAN-ingress-not-ipv4 - " \
		log level warn \
		log flags all \
		drop;

	#drop packets sourced from the broadcast mac
		ether saddr FF:FF:FF:FF:FF:FF \
		log prefix "NET-LOG: DROP: invalid-source-mac-broadcast - " \
		log level warn \
		log flags all \
		drop;

	#drop packets sourced from multicast MACs
		ether saddr & 01:00:00:00:00:00 != 00:00:00:00:00:00 \
		log prefix "NET-LOG: DROP: invalid-source-mac-multicast - " \
		log level warn \
		log flags all \
		drop;

#################		MAC

	#drop packets destined for an unspecified mac
		ether daddr 00:00:00:00:00:00 \
		log prefix "NET-LOG: DROP: destination-mac-unspecified - " \
		log level warn \
		log flags all \
		drop;

	#drop packets destined for the broadcast mac
		ether daddr FF:FF:FF:FF:FF:FF \
		log prefix "NET-LOG: DROP: destination-mac-broadcast - " \
		log level warn \
		log flags all \
		drop;

	#drop packets destined for mutlicast MACs
		ether daddr & 01:00:00:00:00:00 != 00:00:00:00:00:00 \
		log prefix "NET-LOG: DROP: destination-mac-multicast - " \
		log level warn \
		log flags all \
		drop;

	#block forwarding attempts
		ether daddr != 02:00:00:00:00:00 \
		log prefix "NET-LOG: DROP: mac-spoof-attempt - CREATING PACKETS, ARE WE? - " \
		log level warn \
		log flags all \
		drop;

#################		IP

	#network_loopback
		ip saddr 127.0.0.0/8 \
		log prefix "NET-LOG: DROP: source-loopback-127.0.0.0-127.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_empty
		ip saddr 0.0.0.0/8 \
		log prefix "NET-LOG: DROP: source-empty-0.0.0.0-0.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_link_local
		ip saddr 169.254.0.0/16 \
		log prefix "NET-LOG: DROP: source-link-local-169.254.0.0-169.254.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_private_10_0_0_0/8
		#ip saddr 10.0.0.0/8 \
		#ct state new \
		#log prefix "NET-LOG: DROP: source-private-10.0.0.0-10.255.255.255 - " \
		#log level warn \
		#log flags all \
		#drop;

	#network_private_172_16_0_0/12
		ip saddr 172.16.0.0/12 \
		log prefix "NET-LOG: DROP: source-private-172.16.0.0-172.31.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_private_192_168_0_0/16
		ip saddr 192.168.0.0/16 \
		log prefix "NET-LOG: DROP: source-private-192.168.0.0-192.168.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_shared_100_64_0_0/10
		ip saddr 100.64.0.0/10 \
		log prefix "NET-LOG: DROP: source-shared-100.64.0.0-100.127.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_multicast
		ip saddr 224.0.0.0/8 \
		log prefix "NET-LOG: DROP: source-multicast-224.0.0.0-224.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#address_broadcast_source
		ip saddr 255.255.255.255/32 \
		log prefix "NET-LOG: DROP: source-broadcast-255.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#address_broadcast_destination
		ip daddr 255.255.255.255/32 \
		log prefix "NET-LOG: DROP: destination-broadcast-255.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#address_service_continuity
		ip saddr 192.0.0.0/29 \
		log prefix "NET-LOG: DROP: source-service-continuity-192.0.0.0-192.0.0.7 - " \
		log level warn \
		log flags all \
		drop;

	#address_dummy
		ip saddr 192.0.0.8/32 \
		log prefix "NET-LOG: DROP: source-dummy-192.0.0.8 - " \
		log level warn \
		log flags all \
		drop;

	#address_port_control_protocol
		ip saddr 192.0.0.9/32 \
		log prefix "NET-LOG: DROP: source-port-control-protocol-192.0.0.9 - " \
		log level warn \
		log flags all \
		drop;

	#address_relay_nat_traversal
		ip saddr 192.0.0.10/32 \
		log prefix "NET-LOG: DROP: source-NAT-Traversal-192.0.0.10 - " \
		log level warn \
		log flags all \
		drop;

	#address_nat64_discovery
		ip saddr 192.0.0.170/32 \
		log prefix "NET-LOG: DROP: source-NAT-64-Discovery-192.0.0.170 - " \
		log level warn \
		log flags all \
		drop;

	#address_dns64_discovery
		ip saddr 192.0.0.171/32 \
		log prefix "NET-LOG: DROP: source-DNS-64-Discovery-192.0.0.171 - " \
		log level warn \
		log flags all \
		drop;

	#network_ietf_protocol_assignments
		ip saddr 192.0.0.0/24 \
		log prefix "NET-LOG: DROP: source-IETF-Protocol-Assignments-192.0.0.0-192.0.0.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_test_1
		ip saddr 192.0.2.0/24 \
		log prefix "NET-LOG: DROP: source-Test-Network-1-192.0.2.0-192.0.2.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_test_2
		ip saddr 198.51.100.0/24 \
		log prefix "NET-LOG: DROP: source-Test-Network-2-198.51.100.0-198.51.100.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_test_3
		ip saddr 203.0.113.0/24 \
		log prefix "NET-LOG: DROP: source-Test-Network-3-203.0.113.0-203.0.113.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_as112v4
		ip saddr 192.31.196.0/24 \
		log prefix "NET-LOG: DROP: source-AS112v4-192.31.196.0-192.31.196.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_as112v4_direct_delegation
		ip saddr 192.175.48.0/24 \
		log prefix "NET-LOG: DROP: source-AS112v4-Direct-Delegation-192.175.48.0-192.175.48.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_amt
		ip saddr 192.52.193.0/24 \
		log prefix "NET-LOG: DROP: source-AMT-192.52.193.0-192.52.193.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_6to4_relay
		ip saddr 192.88.99.0/24 \
		log prefix "NET-LOG: DROP: source-6to4-relay-192.88.99.0-192.88.99.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_benchmarking
		ip saddr 198.18.0.0/15 \
		log prefix "NET-LOG: DROP: source-Benchmarking-198.18.0.0-198.19.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#not destined for this machine / improperly forwarded
		ip daddr != 10.0.0.5 \
		log prefix "NET-LOG: DROP: ip-forward-attempt - " \
		log level warn \
		log flags all \
		drop;

	#allow other packets - should be ipv4 destined for me only
		accept;

	#block other kinds of packets
		log prefix "NET-LOG: DROP: LAN-ingress-unrecognised-signature - " \
		log level warn \
		log flags all \
		drop;
	}
}

table arp tbl_lan_arp_inp {
	chain chn_lan_arp_inp_filter {
		type filter \
		hook input \
		priority filter; \
		policy drop;

		log prefix "NET-LOG: DROP: ingress-ARP" \
		log level warn \
		log flags all \
		drop;

	}
}

table arp tbl_lan_arp_out {
	chain chn_lan_arp_out_filter {
		type filter \
		hook output \
		priority filter; \
		policy drop;

		log prefix "NET-LOG: DROP: egress-ARP" \
		log level warn \
		log flags all \
		drop;

	}
}

table ip tbl_lan_ip4_prerouting_filter {
	chain chn_lan_ip4_prerouting_filter {
		type filter \
		hook prerouting \
		priority filter; \
		policy drop;

	#drop packets that conntrack considered invalid
		ct state invalid \
		log prefix "NET-LOG: DROP: ingress-IPV4-conntrack-state-invalid - " \
		log level warn \
		log flags all \
		drop;

	#drop loopback traffic with invalid addresses
		meta iifname lo \
		ip saddr != 127.0.0.0/8 \
		log level emerg \
		log prefix "NET-LOG: DROP: invalid-ip-source-loopback - TRACE SOURCE - " \
		log flags all \
		drop;

		meta iifname lo \
		ip daddr != 127.0.0.0/8 \
		log level emerg \
		log prefix "NET-LOG: DROP: invalid-ip-destination-loopback - TRACE SOURCE - " \
		log flags all \
		drop;

		meta oifname lo \
		ip saddr != 127.0.0.0/8 \
		log level emerg \
		log prefix "NET-LOG: DROP: invalid-ip-source-loopback - TRACE SOURCE - " \
		log flags all \
		drop;

		meta oifname lo \
		ip daddr != 127.0.0.0/8 \
		log level emerg \
		log prefix "NET-LOG: DROP: invalid-ip-destination-loopback - TRACE SOURCE - " \
		log flags all \
		drop;

	#allow other loopback traffic
		meta iifname lo \
		ip saddr 127.0.0.0/8 \
		ip daddr 127.0.0.0/8 \
		accept;

		meta oifname lo \
		ip saddr 127.0.0.0/8 \
		ip daddr 127.0.0.0/8 \
		accept;

	#drop unpermitted protocols
		ip protocol != { 1, 6, 17 } \
		log prefix "NET-LOG: DROP: ingress-LAN-unrecognised-protocol - " \
		log level warn \
		log flags all \
		drop;

	#allow icmp
		ip protocol 1 accept;

	#allow tcp
		ip protocol 6 accept;

	#allow udp
		ip protocol 17 accept;

	}
}

table ip tbl_lan_ip4_prerouting_nat {
	chain chn_lan_ip4_prerouting_nat {
		type nat \
		hook prerouting \
		priority filter; \
		policy accept;
	}
}

table ip tbl_ip4_input_filter {
	set set_pool_ntp_org {
		type ipv4_addr; \
		flags interval;
	}

	set set_debian_apt_netblocks {
		type ipv4_addr; \
		flags interval;
	}

	chain chn_lan_ip4_icmp_input_filter {

	#destination unreachable / host unreachable / root uid / from internet/any ip to me
		icmp type 3 \
		icmp code 1 \
		meta skuid 0 \
		log prefix "NET-LOG: PASS: root received icmp host unreachable - " \
		log flags all \
		log level info \
		accept;

	#destination unreachable / port unreachable / root uid / from internet/any ip to me
		icmp type 3 \
		icmp code 3 \
		meta skuid 0 \
		log prefix "NET-LOG: PASS: root received icmp port unreachable - " \
		log flags all \
		log level info \
		accept;

	#destination unreachable / host unreachable / systemd-timesync service / from internet/any ip to me
		icmp type 3 \
		icmp code 1 \
		ip saddr @set_pool_ntp_org \
		meta skuid 997 \
		log prefix "NET-LOG: PASS: systemd-timesync received icmp host unreachable - " \
		log flags all \
		log level info \
		accept;

	#destination unreachable / port unreachable / systemd-timesync service / from internet/any ip to me
		icmp type 3 \
		icmp code 3 \
		ip saddr @set_pool_ntp_org \
		meta skuid 997 \
		log prefix "NET-LOG: PASS: systemd-timesync received icmp port unreachable - " \
		log flags all \
		log level info \
		accept;

	#destination unreachable / host unreachable / apt service / from internet/any ip to me
		icmp type 3 \
		icmp code 1 \
		meta skuid 42 \
		ip saddr @set_debian_apt_netblocks \
		log prefix "NET-LOG: PASS: apt received icmp host unreachable - " \
		log flags all \
		log level info \
		accept;

	#destination unreachable / port unreachable / apt service / from internet/any ip to me
		icmp type 3 \
		icmp code 3 \
		meta skuid 42 \
		ip saddr @set_debian_apt_netblocks \
		log prefix "NET-LOG: PASS: apt received icmp port unreachable - " \
		log flags all \
		log level info \
		accept;

	#block all other signatures
		log prefix "NET-LOG: DROP: ingress-lan-ipv4-icmp-unrecognised - " \
		log level warn \
		log flags all \
		drop;
	}

	chain chn_lan_ip4_tcp_input_filter {

	#http apt tcp response / from internet / any ip to me
		tcp sport 80 \
		tcp dport 49152-65535 \
		ct state established \
		#TCP flag ACK set
		@th,107,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt received tcp http reply ack - " \
		log flags all \
		log level info \
		accept;

	#http apt tcp fin / from internet / any ip to me
		tcp sport 80 \
		tcp dport 49152-65535 \
		ct state established \
		#TCP flag FIN set
		@th,111,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt received tcp http reply fin - " \
		log flags all \
		log level info \
		accept;

	#http apt tcp rst / from internet / any ip to me
		tcp sport 80 \
		tcp dport 49152-65535 \
		ct state { new, established } \
		#TCP flag RST set
		@th,109,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt received tcp http reply rst - " \
		log flags all \
		log level info \
		accept;

	#https apt tcp response / from internet / any ip to me
		tcp sport 443 \
		tcp dport 49152-65535 \
		ct state established \
		#TCP flag ACK set
		@th,107,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt received tcp https reply ack - " \
		log flags all \
		log level info \
		accept;

	#https apt tcp fin / from internet / any ip to me
		tcp sport 443 \
		tcp dport 49152-65535 \
		ct state established \
		#TCP flag FIN set
		@th,111,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt received tcp https reply fin - " \
		log flags all \
		log level info \
		accept;

	#https apt tcp rst / from internet / any ip to me
		tcp sport 443 \
		tcp dport 49152-65535 \
		ct state { new, established } \
		#TCP flag RST set
		@th,109,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt received tcp https reply rst - " \
		log flags all \
		log level info \
		accept;

		log prefix "NET-LOG: DROP: ingress-lan-ipv4-tcp-unrecognised - " \
		log level warn \
		log flags all \
		drop;
	}

	chain chn_lan_ip4_udp_input_filter {

	#udp dns replies to root
		ip saddr 10.0.0.1 \
		udp sport 53 \
		udp dport 49152-65535 \
		udp length > 0 \
		ct state established \
		meta skuid 0 \
		#id not 0
		@ih,0,16 != 0x0 \
		#responses
		@ih,16,1 0x1 \
		log prefix "NET-LOG: PASS: root received dns reply - " \
		log flags all \
		log level info \
		accept;

	#udp dns replies to systemd-timesync
		ip saddr 10.0.0.1 \
		udp sport 53 \
		udp dport 49152-65535 \
		udp length > 0 \
		ct state established \
		meta skuid 997 \
		#id not 0
		@ih,0,16 != 0x0 \
		#responses
		@ih,16,1 0x1 \
		log prefix "NET-LOG: PASS: systemd-timesync received dns reply - " \
		log flags all \
		log level info \
		accept;

	#udp ntpv4 stratum 1 replies to systemd-timesync
		ip saddr @set_pool_ntp_org \
		udp sport 123 \
		udp dport 123 \
		ct state established \
		meta skuid 997 \
		#ntp v4
		@ih,2,3 0x4 \
		#ntp mode server 4
		@ih,5,3 0x4 \
		#ntp stratum 1
		@ih,8,8 0x1 \
		#ntp poll between 6 and 10 - 64sec to 1024 sec or 1-15mins
		@ih,16,8 > 0x5 \
		@ih,16,8 < 0xb \
		#ntp precision between 6 and 16 - 15.62ms to 0.0152588ms
		@ih,24,8 > 0x6 \
		@ih,24,8 < 0x10 \
		#reference ID = GPS or generic pulse per second
		@ih,93,32 { 0x475053, 0x505053 } \
		log prefix "NET-LOG: PASS: systemd-timesync received ntp stratum 1 reply - " \
		log flags all \
		log level info \
		accept;

	#udp ntpv4 stratum 2 or greater replies to systemd-timesync
		ip saddr @set_pool_ntp_org \
		udp sport 123 \
		udp dport 123 \
		ct state established \
		meta skuid 997 \
		#ntp v4
		@ih,2,3 0x4 \
		#ntp mode server 4
		@ih,5,3 0x4 \
		#ntp stratum 1
		@ih,8,8 0x1 \
		#ntp poll 6-10 - 64sec to 1024 sec or 1-15mins
		@ih,16,8 > 0x5 \
		@ih,16,8 < 0xb \
		#ntp precision 6-16 - 15.62ms to 0.0152588ms
		@ih,24,8 > 0x6 \
		@ih,24,8 < 0x10 \
		#reference ID = GPS or generic pulse per second
		@ih,93,32 { 0x475053, 0x505053 } \
		log prefix "NET-LOG: PASS: systemd-timesync received ntp stratum 2-16 reply - " \
		log flags all \
		log level info \
		accept;

	#http apt udp response / from internet / any ip to me
		ip saddr @set_debian_apt_netblocks \
		udp sport 80 \
		udp dport 49152-65535 \
		ct state established \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt received udp http reply - " \
		log flags all \
		log level info \
		accept;

	#https apt udp response / from internet / any ip to me
		ip saddr @set_debian_apt_netblocks \
		udp sport 443 \
		udp dport 49152-65535 \
		ct state established \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt received udp https reply - " \
		log flags all \
		log level info \
		accept;

		log prefix "NET-LOG: DROP: ingress-lan-ipv4-udp-unrecognised - " \
		log level warn \
		log flags all \
		drop;

	}

	chain chn_lan_ip4_input_filter {

		ip protocol 1 goto chn_lan_ip4_icmp_input_filter;

		ip protocol 6 goto chn_lan_ip4_tcp_input_filter;

		ip protocol 17 goto chn_lan_ip4_udp_input_filter;

		log prefix "NET-LOG: DROP: ingress-lan-ipv4-unrecognised - " \
		log level warn \
		log flags all \
		drop;
	}

	chain chn_all_ip4_input_filter {
		type filter \
		hook input \
		priority filter; \
		policy drop;

		ct state invalid \
		log prefix "NET-LOG: DROP: conntrack state invalid IPV4 Input - " \
		log level warn \
		log flags all \
		drop;

	#allow other loopback traffic
		meta iifname lo \
		ip saddr 127.0.0.0/8 \
		ip daddr 127.0.0.0/8 \
		accept;

		meta oifname lo \
		ip saddr 127.0.0.0/8 \
		ip daddr 127.0.0.0/8 \
		accept;

	#allow ipv4 traffic into lan destined for this machine
		meta iifname lan0 ether type 0x0800 ip daddr 10.0.0.5 goto chn_lan_ip4_input_filter;

		log prefix "NET-LOG: DROP: ingress-ipv4-unrecognised - " \
		log level warn \
		log flags all \
		drop;
	}
}

table ip tbl_ip_forwarded_filter {
	chain chn_ip_forwarded_filter {
		type filter \
		hook forward \
		priority filter; \
		policy drop;

		#meta iifname lan0 goto chn_lan_forwarded_filter;

		log prefix "NET-LOG: DROP: lan forward - " \
		log level warn \
		log flags all \
		drop;
	}

	#chain chn_10.0.0.5_forwarded_filter
}

#
# See netfilter.h
#
# nf_dev_hooks does not include egress,
# check grep -i netfilter /boot/config*
#
#table netdev tbl_lan_netdev_egr_filter {
#	chain chn_lan_netdev_egr_filter {
#		type filter \
#		hook egress \
#		device lan0 \
#		priority filter; \
#		policy drop; \
#		comment "Outbound LAN Device Filter";
#
#	#allow other ipv4 packets
#		ether type 0x0800 accept;
#
#	#block other kinds of packets
#		log prefix "NET-LOG: DROP: lan outbound - " \
#		log level warn \
#		log flags all \
#		drop;
#
#	}
#}

table ip tbl_ip4_output_filter {
	set set_pool_ntp_org {
		type ipv4_addr; \
		flags interval;
	}

	set set_debian_apt_netblocks {
		type ipv4_addr; \
		flags interval;
	}

	chain chn_lan_ip4_output_icmp_filter {

		log prefix "NET-LOG: DROP: egress-lan-ipv4-icmp-unrecognised - " \
		log level warn \
		log flags all \
		drop;
	}

	chain chn_lan_ip4_output_tcp_filter {

	#http apt tcp new connection / from me to debian apt server/s
		ip daddr @set_debian_apt_netblocks \
		tcp sport 49152-65535 \
		tcp dport 80 \
		ct state new \
		#TCP flag SYN set
		@th,110,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent tcp http request syn - " \
		log level info \
		log flags all \
		accept;

	#http apt tcp existing connection / from me to debian apt server/s
		ip daddr @set_debian_apt_netblocks \
		tcp sport 49152-65535 \
		tcp dport 80 \
		ct state established \
		#TCP flag ACK set
		@th,107,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent tcp http request ack - " \
		log level info \
		log flags all \
		accept;

	#http apt tcp fin / from internet / any ip to me
		ip daddr @set_debian_apt_netblocks \
		tcp sport 49152-65535 \
		tcp dport 80 \
		ct state established \
		#TCP flag FIN set
		@th,111,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent tcp http request fin - " \
		log level info \
		log flags all \
		accept;

	#http apt tcp rst / from internet / any ip to me
		ip daddr @set_debian_apt_netblocks \
		tcp sport 49152-65535 \
		tcp dport 80 \
		ct state { new, established } \
		#TCP flag RST set
		@th,109,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent tcp http request rst - " \
		log level info \
		log flags all \
		accept;

	#https apt tcp new connection / from me to debian apt server/s
		ip daddr @set_debian_apt_netblocks \
		tcp sport 49152-65535 \
		tcp dport 443 \
		ct state new \
		#TCP flag SYN set
		@th,110,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent tcp https request syn - " \
		log level info \
		log flags all \
		accept;

	#https apt tcp existing connection / from me to debian apt server/s
		ip daddr @set_debian_apt_netblocks \
		tcp sport 49152-65535 \
		tcp dport 443 \
		ct state established \
		#TCP flag ACK set
		@th,107,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent tcp https request ack - " \
		log level info \
		log flags all \
		accept;

	#https apt tcp fin / from internet / any ip to me
		ip daddr @set_debian_apt_netblocks \
		tcp sport 49152-65535 \
		tcp dport 443 \
		ct state established \
		#TCP flag FIN set
		@th,111,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent tcp https request fin - " \
		log level info \
		log flags all \
		accept;

	#https apt tcp rst / from internet / any ip to me
		ip daddr @set_debian_apt_netblocks \
		tcp sport 49152-65535 \
		tcp dport 443 \
		ct state { new, established } \
		#TCP flag RST set
		@th,109,1 0x1 \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent tcp https request rst - " \
		log level info \
		log flags all \
		accept;

		log prefix "NET-LOG: DROP: egress-lan-ipv4-tcp-unrecognised - " \
		log level warn \
		log flags all \
		drop;
	}

	chain chn_lan_ip4_output_udp_filter {

	#udp dns requests from root
		ip daddr 10.0.0.1 \
		udp sport 49152-65535 \
		udp dport 53 \
		ct state new \
		meta skuid 0 \
		#id not 0
		@ih,0,16 != 0x0 \
		#requests
		@ih,16,1 0x0 \
		log prefix "NET-LOG: PASS: root sent udp dns request - " \
		log level info \
		log flags all \
		accept;

	#udp dns requests from systemd-timesync
		ip daddr 10.0.0.1 \
		udp sport 49152-65535 \
		udp dport 53 \
		ct state new \
		meta skuid 997 \
		#id not 0
		@ih,0,16 != 0x0 \
		#requests
		@ih,16,1 0x0 \
		log prefix "NET-LOG: PASS: systemd-timesync sent udp dns request - " \
		log level info \
		log flags all \
		accept;

	#udp ntpv4 stratum 1 requests from systemd-timesync
		ip daddr @set_pool_ntp_org \
		udp sport 123 \
		udp dport 123 \
		ct state new \
		meta skuid 997 \
		#ntp v4
		@ih,2,3 0x4 \
		#ntp mode client 3
		@ih,5,3 0x3 \
		#ntp stratum 2 - 16
		@ih,8,8 > 0x1 \
		@ih,8,8 < 0x11 \
		#ntp poll 6-10 - 64sec to 1024 sec or 1-15mins
		@ih,16,8 > 0x5 \
		@ih,16,8 < 0x10 \
		#ntp precision 6-16 - 15.62ms to 0.0152588ms
		@ih,24,8 > 0x6 \
		@ih,24,8 < 0x10 \
		#reference ID = GPS or generic pulse per second
		@ih,93,32 { 0x475053, 0x505053 } \
		log prefix "NET-LOG: PASS: systemd-timesync sent udp ntp stratum 1 request - " \
		log level info \
		log flags all \
		accept;

	#udp ntpv4 stratum 2 or greater requests from systemd-timesync
		ip daddr @set_pool_ntp_org \
		udp sport 123 \
		udp dport 123 \
		ct state new \
		meta skuid 997 \
		#ntp v4
		@ih,2,3 0x4 \
		#ntp mode client 3
		@ih,5,3 0x3 \
		#ntp stratum 2 to 16
		@ih,8,8 > 0x1 \
		@ih,8,8 < 0x11 \
		#ntp poll 6-10 - 64sec to 1024 sec or 1-15mins
		@ih,16,8 > 0x5 \
		@ih,16,8 < 0x10 \
		#ntp precision 6-16 - 15.62ms to 0.0152588ms
		@ih,24,8 < 0x6 \
		@ih,24,8 > 0x10 \
		#reference ID = GPS or generic pulse per second
		@ih,93,32 { 0x475053, 0x505053 } \
		log prefix "NET-LOG: PASS: systemd-timesync sent udp ntp stratum 2-16 request - " \
		log level info \
		log flags all \
		accept;

	#http apt udp request from me to debian apt servers
		ip daddr @set_debian_apt_netblocks \
		udp sport 49152-65535 \
		udp dport 80 \
		ct state new \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent udp http new - " \
		log level info \
		log flags all \
		accept;

	#http apt udp request from me to debian apt servers
		ip daddr @set_debian_apt_netblocks \
		udp sport 49152-65535 \
		udp dport 80 \
		ct state established \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent udp http established - " \
		log level info \
		log flags all \
		accept;

	#https apt udp request from me to debian apt servers
		ip daddr @set_debian_apt_netblocks \
		udp sport 49152-65535 \
		udp dport 443 \
		ct state new \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent udp https new - " \
		log level info \
		log flags all \
		accept;

	#https apt udp request from me to debian apt servers
		ip daddr @set_debian_apt_netblocks \
		udp sport 49152-65535 \
		udp dport 443 \
		ct state established \
		meta skuid 42 \
		log prefix "NET-LOG: PASS: apt sent udp https established - " \
		log level info \
		log flags all \
		accept;

		log prefix "NET-LOG: DROP: egress-lan-ipv4-udp-unrecognised - " \
		log level warn \
		log flags all \
		drop;
	}

	#This chain serves as a whitelist for peer traffic on the LAN bridge.
	#eg. a local web server not served on the (would-be 'too big') router.
	#chain chn_lan_ip4_output_local_filter {
	#	ip saddr @set_lan_permitted_local_destinations \
	#	#then goto the standard output filter / if rules on a router, a per-client output filter.
	#	goto chn_lan_ip4_output_filter;
	#
	#	log prefix "NET-LOG: DROP: egress-lan-ipv4-unrecognised-peer - " \
	#	log level warn \
	#	log flags all \
	#	drop;
	#}

	chain chn_lan_ip4_output_filter {
		ip protocol 1 goto chn_lan_ip4_output_icmp_filter;

		ip protocol 6 goto chn_lan_ip4_output_tcp_filter;

		ip protocol 17 goto chn_lan_ip4_output_udp_filter;

		log prefix "NET-LOG: DROP: egress-lan-ipv4-unrecognised -  " \
		log level warn \
		log flags all \
		drop;
	}

	chain chn_ip4_output_filter {
		type filter \
		hook output \
		priority filter; \
		policy drop;

		ct state invalid \
		log prefix "NET-LOG: DROP: ipv4 output conntrack state invalid - " \
		log level warn \
		log flags all \
		drop;

	#drop loopback traffic with invalid addresses
		meta iifname lo \
		ip saddr != 127.0.0.0/8 \
		log level emerg \
		log prefix "NET-LOG: DROP: loopback ingress invalid source address - " \
		log flags all \
		drop;

		meta iifname lo \
		ip daddr != 127.0.0.0/8 \
		log level emerg \
		log prefix "NET-LOG: DROP: loopback ingress invalid destination address - " \
		log flags all \
		drop;

		meta oifname lo \
		ip saddr != 127.0.0.0/8 \
		log level emerg \
		log prefix "NET-LOG: DROP: loopback egress invalid source address " \
		log flags all \
		drop;

		meta oifname lo \
		ip daddr != 127.0.0.0/8 \
		log level emerg \
		log prefix "NET-LOG: DROP: loopback egress invalid destination address " \
		log flags all \
		drop;

	#allow other loopback traffic
		meta iifname lo \
		ip saddr 127.0.0.0/8 \
		ip daddr 127.0.0.0/8 \
		accept;

		meta oifname lo \
		ip saddr 127.0.0.0/8 \
		ip daddr 127.0.0.0/8 \
		accept;

##################	MAC

	#drop packets destined for an unspecified mac
		ether daddr 00:00:00:00:00:00 \
		log prefix "NET-LOG: DROP: mac-destination-unspecified - " \
		log level warn \
		log flags all \
		drop;

	#drop packets sourced from the broadcast mac
		ether saddr FF:FF:FF:FF:FF:FF \
		log prefix "NET-LOG: DROP: mac-source-broadcast - " \
		log level warn \
		log flags all \
		drop;

	#drop packets destined for the broadcast mac
		ether daddr FF:FF:FF:FF:FF:FF \
		log prefix "NET-LOG: DROP: mac-destination-broadcast - " \
		log level warn \
		log flags all \
		drop;

	#drop packets sourced from multicast MACs
		ether saddr & 01:00:00:00:00:00 != 00:00:00:00:00:00 \
		log prefix "NET-LOG: DROP: mac-source-multicast - " \
		log level warn \
		log flags all \
		drop;

	#drop packets destined for mutlicast MACs
		ether daddr & 01:00:00:00:00:00 != 00:00:00:00:00:00 \
		log prefix "NET-LOG: DROP: mac-destination-multicast - " \
		log level warn \
		log flags all \
		drop;

#####################	IP

	#network_loopback
		ip daddr 127.0.0.0/8 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Loopback network 127.0.0.0 - 127.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_empty
		ip daddr 0.0.0.0/8 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Empty network 0.0.0.0 - 0.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_link_local
		ip daddr 169.254.0.0/16 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Link Local network 169.254.0.0 - 169.254.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_private_172_16_0_0/12
		ip daddr 172.16.0.0/12 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Private network 172.16.0.0 - 172.31.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_private_192_168_0_0/16
		ip daddr 192.168.0.0/16 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Private network 192.168.0.0 - 192.168.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_shared_100_64_0_0/10
		ip daddr 100.64.0.0/10 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Shared network 100.64.0.0 - 100.127.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_multicast
		ip daddr 224.0.0.0/8 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Multicast network 224.0.0.0 - 224.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#address_broadcast
		ip daddr 255.255.255.255/32 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Broadcast address 255.255.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#address_service_continuity
		ip daddr 192.0.0.0/29 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Service Continuity network 192.0.0.0 - 192.0.0.7 - " \
		log level warn \
		log flags all \
		drop;

	#address_dummy
		ip daddr 192.0.0.8/32 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Dummy address 192.0.0.8 - " \
		log level warn \
		log flags all \
		drop;

	#address_port_control_protocol
		ip daddr 192.0.0.9/32 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Port control protocol 192.0.0.9 - " \
		log level warn \
		log flags all \
		drop;

	#address_relay_nat_traversal
		ip daddr 192.0.0.10/32 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - NAT Traversal 192.0.0.10 - " \
		log level warn \
		log flags all \
		drop;

	#address_nat64_discovery
		ip daddr 192.0.0.170/32 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - NAT 64 Discovery 192.0.0.170 - " \
		log level warn \
		log flags all \
		drop;

	#address_dns64_discovery
		ip daddr 192.0.0.171/32 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - DNS 64 Discovery 192.0.0.171 - " \
		log level warn \
		log flags all \
		drop;

	#network_ietf_protocol_assignments
		ip daddr 192.0.0.0/24 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - IETF Protocol Assignments 192.0.0.0 - 192.0.0.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_test_1
		ip daddr 192.0.2.0/24 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Test Network 1 - 192.0.2.0 - 192.0.2.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_test_2
		ip daddr 198.51.100.0/24 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Test Network 2 - 198.51.100.0 - 198.51.100.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_test_3
		ip daddr 203.0.113.0/24 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Test Network 3 - 203.0.113.0 - 203.0.113.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_as112v4
		ip daddr 192.31.196.0/24 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - AS112v4 192.31.196.0 - 192.31.196.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_as112v4_direct_delegation
		ip daddr 192.175.48.0/24 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - AS112v4 Direct Delegation 192.175.48.0 - 192.175.48.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_amt
		ip daddr 192.52.193.0/24 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - AMT 192.52.193.0 - 192.52.193.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_6to4_relay
		ip daddr 192.88.99.0/24 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - 6to4 relay 192.88.99.0 - 192.88.99.255 - " \
		log level warn \
		log flags all \
		drop;

	#network_benchmarking
		ip daddr 198.18.0.0/15 \
		log prefix "NET-LOG: DROP: egress-lan-ip-destination - Benchmarking 198.18.0.0 - 198.19.255.255 - " \
		log level warn \
		log flags all \
		drop;

	#Here you could specify machines that this machine communicates with on the LAN
	#network_private_10_0_0_0/8
	#	ip daddr 10.0.0.0/8 \
	#	goto chn_lan_ip4_output_local_filter;

	#Drop spoofing attempts; this machine does not forward.
		ip saddr != 10.0.0.5 \
		log prefix "NET-LOG: DROP: egress-lan-ip-spoof-attempt - " \
		log level warn \
		log flags all \
		drop;

		meta oifname lan0 goto chn_lan_ip4_output_filter;

		log prefix "NET-LOG: DROP: egress-lan-ipv4-unrecognised - " \
		log level warn \
		log flags all \
		drop;
	}
}
